{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "AudioPlayer.svelte",
    "BlueThing.svelte",
    "Box.svelte",
    "ContactCard.svelte",
    "File.svelte",
    "Folder.svelte",
    "GreenThing.svelte",
    "Keypad.svelte",
    "Map.svelte",
    "Nested.svelte",
    "RedThing.svelte",
    "Thing.svelte",
    "Todo.svelte",
    "Actions.svelte",
    "Animate.svelte",
    "Binding.svelte",
    "Classes.svelte",
    "ComponentComposition.svelte",
    "Event.svelte",
    "Introduce.svelte",
    "Lifecycle.svelte",
    "Motion.svelte",
    "SpecialElements.svelte",
    "Transitions.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { Router, Route, Link } from \"svelte-routing\";\r\n\r\n  import {\r\n    Actions,\r\n    Animate,\r\n    Binding,\r\n    Classes,\r\n    ComponentComposition,\r\n    ContextAPI,\r\n    Debugging,\r\n    Event,\r\n    Introduce,\r\n    Lifecycle,\r\n    Logic,\r\n    ModuleContext,\r\n    Motion,\r\n    Props,\r\n    Reactivity,\r\n    SpecialElements,\r\n    Stores,\r\n    Transitions,\r\n  } from \"./sections/index\";\r\n</script>\r\n\r\n<style>\r\n  :global(body) {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  .root {\r\n    padding: 100px 0;\r\n  }\r\n\r\n  nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  :global(a),\r\n  :global(a):visited {\r\n    color: black;\r\n    border: 2px solid blue;\r\n    border-radius: 8px;\r\n    flex: 1;\r\n    align-self: center;\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<div class=\"root\">\r\n  <Router>\r\n    <nav>\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"reactivity\">Reactivity</Link>\r\n      <Link to=\"props\">Props</Link>\r\n      <Link to=\"logic\">Logic</Link>\r\n      <Link to=\"event\">Event</Link>\r\n      <Link to=\"binding\">Binding</Link>\r\n      <Link to=\"lifecycle\">Lifecycle</Link>\r\n      <Link to=\"stores\">Stores</Link>\r\n      <Link to=\"motion\">Motion</Link>\r\n      <Link to=\"transitions\">Transitions</Link>\r\n      <Link to=\"animate\">Animate</Link>\r\n      <Link to=\"actions\">Actions</Link>\r\n      <Link to=\"classes\">Classes</Link>\r\n      <Link to=\"componentComposition\">ComponentComposition</Link>\r\n      <Link to=\"contextAPI\">ContextAPI</Link>\r\n      <Link to=\"specialElements\">SpecialElements</Link>\r\n      <Link to=\"moduleContext\">ModuleContext</Link>\r\n    </nav>\r\n\r\n    <div>\r\n      <Route path=\"/props\">\r\n        <Props />\r\n      </Route>\r\n      <Route path=\"/logic\">\r\n        <Logic />\r\n      </Route>\r\n      <Route path=\"/event\">\r\n        <Event />\r\n      </Route>\r\n      <Route path=\"/binding\">\r\n        <Binding />\r\n      </Route>\r\n      <Route path=\"/lifecycle\">\r\n        <Lifecycle />\r\n      </Route>\r\n      <Route path=\"/stores\">\r\n        <Stores />\r\n      </Route>\r\n      <Route path=\"/motion\">\r\n        <Motion />\r\n      </Route>\r\n      <Route path=\"/transitions\">\r\n        <Transitions />\r\n      </Route>\r\n      <Route path=\"/animate\">\r\n        <Animate />\r\n      </Route>\r\n      <Route path=\"/actions\">\r\n        <Actions />\r\n      </Route>\r\n      <Route path=\"/classes\">\r\n        <Classes />\r\n      </Route>\r\n      <Route path=\"/componentComposition\">\r\n        <ComponentComposition />\r\n      </Route>\r\n      <Route path=\"/contextAPI\">\r\n        <ContextAPI />\r\n      </Route>\r\n      <Route path=\"/specialElements\">\r\n        <SpecialElements />\r\n      </Route>\r\n      <Route path=\"/moduleContext\">\r\n        <ModuleContext />\r\n      </Route>\r\n      <Route path=\"/reactivity\">\r\n        <Reactivity />\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Introduce />\r\n      </Route>\r\n    </div>\r\n  </Router>\r\n\r\n  <!-- Removing the annotation will start debug mode. -->\r\n  <!-- <Debugging /> -->\r\n\r\n  <!-- <Congratulations /> -->\r\n</div>\r\n",
    "<script context=\"module\">\r\n  // let current;\r\n\r\n  const elements = new Set();\r\n\r\n  export function stopAll() {\r\n    elements.forEach((e) => {\r\n      e.pause();\r\n    });\r\n  }\r\n</script>\r\n\r\n<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  export let src;\r\n  export let title;\r\n  export let composer;\r\n  export let performer;\r\n\r\n  let audio;\r\n  let paused = true;\r\n\r\n  const stopOthers = () => {\r\n    // if (current && current !== audio) current.pause();\r\n    // current = audio;\r\n    console.log(elements);\r\n    elements.forEach((e) => {\r\n      if (e !== audio) e.pause();\r\n    });\r\n  };\r\n\r\n  onMount(() => {\r\n    elements.add(audio);\r\n    return () => elements.delete(audio);\r\n  });\r\n</script>\r\n\r\n<style>\r\n  article {\r\n    margin: 0 0 1em 0;\r\n    max-width: 800px;\r\n  }\r\n  h2,\r\n  p {\r\n    margin: 0 0 0.3em 0;\r\n  }\r\n  audio {\r\n    width: 100%;\r\n    margin: 0.5em 0 1em 0;\r\n  }\r\n  .playing {\r\n    color: #ff3e00;\r\n  }\r\n</style>\r\n\r\n<article class:playing={!paused}>\r\n  <h2>{title}</h2>\r\n  <p><strong> {composer} </strong> / performer by {performer}</p>\r\n\r\n  <!-- svelte-ignore a11y-media-has-caption -->\r\n  <audio bind:this={audio} bind:paused on:play={stopOthers} controls {src} />\r\n</article>\r\n",
    "<style>\r\n  strong {\r\n    color: blue;\r\n  }\r\n</style>\r\n\r\n<strong>blue thing</strong>\r\n",
    "<style>\r\n  .box {\r\n    width: 300px;\r\n    border: 1px solid red;\r\n    padding: 40px;\r\n  }\r\n</style>\r\n\r\n<div class=\"box\">\r\n  <slot><em>no content was provided</em></slot>\r\n  <br /><br />\r\n  <div class=\"child\">\r\n    <slot name=\"child\"><span>Unknwon child</span></slot>\r\n  </div>\r\n  <div class=\"email\">\r\n    <slot name=\"email\"><span class=\"missing\">Unknown email</span></slot>\r\n  </div>\r\n</div>\r\n",
    "<style>\r\n  .contact-card {\r\n    width: 300px;\r\n    border: 1px solid #aaa;\r\n    border-radius: 2px;\r\n    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);\r\n    padding: 1em;\r\n  }\r\n\r\n  h2 {\r\n    padding: 0 0 0.2em 0;\r\n    margin: 0 0 1em 0;\r\n    border-bottom: 1px solid #ff3e00;\r\n  }\r\n\r\n  .address,\r\n  .email {\r\n    padding: 0 0 0 1.5em;\r\n    background: 0 0 no-repeat;\r\n    background-size: 20px 20px;\r\n    margin: 0 0 0.5em 0;\r\n    line-height: 1.2;\r\n  }\r\n\r\n  .address {\r\n    background-image: url(tutorial/icons/map-marker.svg);\r\n  }\r\n  .email {\r\n    background-image: url(tutorial/icons/email.svg);\r\n  }\r\n  .missing {\r\n    color: #999;\r\n  }\r\n</style>\r\n\r\n<article class=\"contact-card\">\r\n  <h2>\r\n    <slot name=\"name\"><span class=\"missing\">Unknown name</span></slot>\r\n  </h2>\r\n\r\n  <div class=\"address\">\r\n    <slot name=\"address\"><span class=\"missing\">Unknown address</span></slot>\r\n  </div>\r\n\r\n  <div class=\"email\">\r\n    <slot name=\"email\"><span class=\"missing\">Unknown email</span></slot>\r\n  </div>\r\n</article>\r\n",
    "<script>\r\n  export let name;\r\n  $: type = name.slice(name.lastIndexOf(\".\") + 1);\r\n</script>\r\n\r\n<style>\r\n  span {\r\n    padding: 0 0 0 1.5em;\r\n    background: 0 0.1em no-repeat;\r\n    background-size: 1em 1em;\r\n  }\r\n</style>\r\n\r\n<span\r\n  style=\"background-image: url(https://svelte.dev/tutorial/icons/{type}.svg)\">\r\n  {name}\r\n</span>\r\n",
    "<script>\r\n  import File from \"./File.svelte\";\r\n\r\n  export let expanded = false;\r\n  export let name;\r\n  export let files;\r\n\r\n  function toggle() {\r\n    expanded = !expanded;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  span {\r\n    padding: 0 0 0 1.5em;\r\n    background: url(\"https://svelte.dev/tutorial/icons/folder.svg\") 0 0.1em\r\n      no-repeat;\r\n    background-size: 1em 1em;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .expanded {\r\n    background-image: url(\"https://svelte.dev/tutorial/icons/folder-open.svg\");\r\n  }\r\n\r\n  ul {\r\n    padding: 0.2em 0 0 0.5em;\r\n    margin: 0 0 0 0.5em;\r\n    list-style: none;\r\n    border-left: 1px solid #eee;\r\n  }\r\n\r\n  li {\r\n    padding: 0.2em 0;\r\n  }\r\n</style>\r\n\r\n<span class:expanded on:click={toggle}>{name}</span>\r\n\r\n{#if expanded}\r\n  <ul>\r\n    {#each files as file}\r\n      <li>\r\n        {#if file.type === 'folder'}\r\n          <svelte:self {...file} />\r\n        {:else}\r\n          <File {...file} />\r\n        {/if}\r\n      </li>\r\n    {/each}\r\n  </ul>\r\n{/if}\r\n",
    "<style>\r\n  strong {\r\n    color: green;\r\n  }\r\n</style>\r\n\r\n<strong>green thing</strong>\r\n",
    "<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  export let value = \"\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  const select = (num) => () => {\r\n    if (value.length >= 10) {\r\n      alert(\"No longer\");\r\n      return;\r\n    }\r\n    value += num;\r\n  };\r\n  const clear = () => (value = \"\");\r\n  const submit = () => dispatch(\"submit\");\r\n</script>\r\n\r\n<style>\r\n  .keypad {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 5em);\r\n    grid-template-rows: repeat(4, 3em);\r\n    grid-gap: 0.5em;\r\n  }\r\n\r\n  button {\r\n    margin: 0;\r\n  }\r\n</style>\r\n\r\n<div class=\"keypad\">\r\n  <button on:click={select(1)}>1</button>\r\n  <button on:click={select(2)}>2</button>\r\n  <button on:click={select(3)}>3</button>\r\n  <button on:click={select(4)}>4</button>\r\n  <button on:click={select(5)}>5</button>\r\n  <button on:click={select(6)}>6</button>\r\n  <button on:click={select(7)}>7</button>\r\n  <button on:click={select(8)}>8</button>\r\n  <button on:click={select(9)}>9</button>\r\n\r\n  <button disabled={!value} on:click={clear}>clear</button>\r\n  <button on:click={select(0)}>0</button>\r\n  <button disabled={!value} on:click={submit}>submit</button>\r\n</div>\r\n",
    "<script>\r\n  import { onMount, setContext } from \"svelte\";\r\n  import { key, mapbox } from \"./mapbox\";\r\n\r\n  setContext(key, {\r\n    getMap: () => map,\r\n  });\r\n\r\n  export let lat;\r\n  export let lon;\r\n  export let zoom;\r\n\r\n  let container;\r\n  let map;\r\n\r\n  onMount(() => {\r\n    const link = document.createElement(\"link\");\r\n    link.rel = \"stylesheet\";\r\n    link.href = \"https://unpkg.com/mapbox-gl/dist/mapbox-gl.css\";\r\n    link.onload = () => {\r\n      map = new mapbox.Map({\r\n        container,\r\n        style: \"mapbox://styles/mapbox/streets-v9\",\r\n        center: [lon, lat],\r\n        zoom,\r\n      });\r\n    };\r\n\r\n    document.head.appendChild(link);\r\n\r\n    return () => {\r\n      map.remove();\r\n      link.parentNode.removeChild(link);\r\n    };\r\n  });\r\n</script>\r\n\r\n<style>\r\n  div {\r\n    width: 100%;\r\n    height: 300px;\r\n  }\r\n</style>\r\n\r\n<div bind:this={container}>\r\n  {#if map}\r\n    <slot />\r\n  {/if}\r\n</div>\r\n",
    "<style>\r\n  .paragraph {\r\n    color: purple;\r\n    font-family: \"Comic Sans MS\", cursive;\r\n    font-size: 2em;\r\n  }\r\n</style>\r\n\r\n<div class=\"paragraphWrap\">\r\n  <p class=\"paragraph\">This is paragraph.</p>\r\n</div>\r\n",
    "<style>\r\n  strong {\r\n    color: red;\r\n  }\r\n</style>\r\n\r\n<strong>red thing</strong>\r\n",
    "<script>\r\n  export let current;\r\n\r\n  const initial = current;\r\n</script>\r\n\r\n<style>\r\n  span {\r\n    display: inline-block;\r\n    padding: 0.2em 0.5em;\r\n    margin: 0 0.2em 0.2em 0;\r\n    width: 4em;\r\n    text-align: center;\r\n    border-radius: 0.2em;\r\n    color: white;\r\n  }\r\n</style>\r\n\r\n<p>\r\n  <span style=\"background-color: {initial}\">initial</span>\r\n  <span style=\"background-color: {current}\">current</span>\r\n</p>\r\n",
    "<script>\r\n  import { afterUpdate } from \"svelte\";\r\n  import flash from \"./flash\";\r\n\r\n  export let todo;\r\n\r\n  let div;\r\n\r\n  afterUpdate(() => {\r\n    flash(div);\r\n  });\r\n</script>\r\n\r\n<style>\r\n  div {\r\n    cursor: pointer;\r\n    line-height: 1.5;\r\n  }\r\n</style>\r\n\r\n<svelte:options immutable={true} />\r\n\r\n<div bind:this={div} on:click>{todo.done ? '👍' : ''} {todo.text}</div>\r\n",
    "<script>\r\n  import { spring } from \"svelte/motion\";\r\n  import { pannable } from \"../lessons/pannable\";\r\n  import { longpress } from \"../lessons/longpress\";\r\n\r\n  const coords = spring(\r\n    {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    {\r\n      stiffness: 0.2,\r\n      damping: 0.4,\r\n    }\r\n  );\r\n\r\n  const handlePanStart = () => {\r\n    coords.stiffness = coords.damping = 1;\r\n  };\r\n\r\n  const handlePanMove = (e) => {\r\n    coords.update(($coords) => ({\r\n      x: $coords.x + e.detail.dx,\r\n      y: $coords.y + e.detail.dy,\r\n    }));\r\n  };\r\n\r\n  const handlePanEnd = (e) => {\r\n    coords.stiffness = 0.2;\r\n    coords.damping = 0.4;\r\n    coords.set({ x: 0, y: 0 });\r\n  };\r\n\r\n  let pressed = false;\r\n  let duration = 2000;\r\n</script>\r\n\r\n<style>\r\n  .actions {\r\n    position: relative;\r\n    margin-top: 200px;\r\n  }\r\n\r\n  .box {\r\n    --width: 100px;\r\n    --height: 100px;\r\n    position: absolute;\r\n    width: var(--width);\r\n    height: var(--height);\r\n    left: calc(50% - var(--width) / 2);\r\n    top: calc(50% - var(--height) / 2);\r\n    border-radius: 4px;\r\n    background-color: #ff3e00;\r\n    cursor: move;\r\n  }\r\n</style>\r\n\r\n<div class=\"actions\">\r\n  <div\r\n    class=\"box\"\r\n    use:pannable\r\n    on:panstart={handlePanStart}\r\n    on:panmove={handlePanMove}\r\n    on:panend={handlePanEnd}\r\n    style=\"transform: translate({$coords.x}px, {$coords.y}px) rotate({$coords.x * 0.2}deg);\" />\r\n\r\n  <div class=\"addingParameters\">\r\n    <label>\r\n      <input type=\"range\" bind:value={duration} max=\"2000\" min=\"100\" />\r\n      {duration}ms\r\n    </label>\r\n    <button\r\n      use:longpress={duration}\r\n      on:longpress={() => (pressed = true)}\r\n      on:mouseenter={() => (pressed = false)}>press and hold</button>\r\n    {#if pressed}\r\n      <p>congratulations, you pressed and held for {duration}ms</p>\r\n    {/if}\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { crossfade } from \"svelte/transition\";\r\n  import { quintOut } from \"svelte/easing\";\r\n  import { flip } from \"svelte/animate\";\r\n\r\n  const [send, receive] = crossfade({\r\n    duration: (d) => Math.sqrt(d * 200),\r\n    fallback(node, params) {\r\n      const style = getComputedStyle(node);\r\n      const transform = style.transform === \"none\" ? \"\" : style.transform;\r\n\r\n      return {\r\n        duration: 600,\r\n        easing: quintOut,\r\n        css: (t) => `\r\n          transform: ${transform} scale(${t});\r\n          opacity: ${t};\r\n        `,\r\n      };\r\n    },\r\n  });\r\n\r\n  let uid = 1;\r\n\r\n  let todos = [\r\n    { id: uid++, done: false, description: \"write some docs\" },\r\n    { id: uid++, done: false, description: \"start writing blog post\" },\r\n    { id: uid++, done: true, description: \"buy some milk\" },\r\n    { id: uid++, done: false, description: \"mow the lawn\" },\r\n    { id: uid++, done: false, description: \"feed the turtle\" },\r\n    { id: uid++, done: false, description: \"fix some bugs\" },\r\n  ];\r\n\r\n  const add = (input) => {\r\n    const todo = {\r\n      id: uid++,\r\n      done: false,\r\n      description: input.value,\r\n    };\r\n\r\n    todos = [...todos, todo];\r\n    input.value = \"\";\r\n  };\r\n\r\n  const remove = (todo) => {\r\n    todos = todos.filter((t) => t !== todo);\r\n  };\r\n\r\n  const mark = (todo, done) => {\r\n    todo.done = done;\r\n    remove(todo);\r\n    todos = todos.concat(todo);\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .board {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 1em;\r\n    max-width: 36em;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .board > input {\r\n    font-size: 1.4em;\r\n    grid-column: 1/3;\r\n  }\r\n\r\n  .board h2 {\r\n    font-size: 2em;\r\n    font-weight: 200;\r\n    user-select: none;\r\n    margin: 0 0 0.5em 0;\r\n  }\r\n\r\n  .board label {\r\n    position: relative;\r\n    line-height: 1.2;\r\n    padding: 0.5em 2.5em 0.5em 2em;\r\n    margin: 0 0 0.5em 0;\r\n    border-radius: 2px;\r\n    user-select: none;\r\n    border: 1px solid hsl(240, 8%, 70%);\r\n    background-color: hsl(240, 8%, 93%);\r\n    color: #333;\r\n  }\r\n\r\n  .board input[type=\"checkbox\"] {\r\n    position: absolute;\r\n    left: 0.5em;\r\n    top: 0.6em;\r\n    margin: 0;\r\n  }\r\n\r\n  .board .done {\r\n    border: 1px solid hsl(240, 8%, 90%);\r\n    background-color: hsl(240, 8%, 98%);\r\n  }\r\n\r\n  .board button {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0.2em;\r\n    width: 2em;\r\n    height: 100%;\r\n    background: no-repeat 50% 50%\r\n      url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23676778' d='M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M17,7H14.5L13.5,6H10.5L9.5,7H7V9H17V7M9,18H15A1,1 0 0,0 16,17V10H8V17A1,1 0 0,0 9,18Z'%3E%3C/path%3E%3C/svg%3E\");\r\n    background-size: 1.4em 1.4em;\r\n    border: none;\r\n    opacity: 0;\r\n    transition: opacity 0.2s;\r\n    text-indent: -9999px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .board label:hover button {\r\n    opacity: 1;\r\n  }\r\n</style>\r\n\r\n<div class=\"animate\">\r\n  <div class=\"animateDirective\">\r\n    <div class=\"board\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"what needs to be done?\"\r\n        on:keydown={(e) => e.key === 'Enter' && add(e.target)} />\r\n\r\n      <div class=\"left\">\r\n        <h2>todo</h2>\r\n        {#each todos.filter((t) => !t.done) as todo (todo.id)}\r\n          <label\r\n            in:receive={{ key: todo.id }}\r\n            out:send={{ key: todo.id }}\r\n            animate:flip={{ duration: 200 }}>\r\n            <input type=\"checkbox\" on:change={() => mark(todo, true)} />\r\n            {todo.description}\r\n            <button on:click={() => remove(todo)}>remove</button>\r\n          </label>\r\n        {/each}\r\n      </div>\r\n      <div class=\"right\">\r\n        <h2>done</h2>\r\n        {#each todos.filter((t) => t.done) as todo (todo.id)}\r\n          <label\r\n            class=\"done\"\r\n            in:receive={{ key: todo.id }}\r\n            out:send={{ key: todo.id }}\r\n            animate:flip={{ duration: 200 }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked\r\n              on:change={() => mark(todo, false)} />\r\n            {todo.description}\r\n            <button on:click={() => remove(todo)}>remove</button>\r\n          </label>\r\n        {/each}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import Keypad from \"../lessons/Keypad.svelte\";\r\n\r\n  let name = \"world\";\r\n\r\n  let a = 2;\r\n  let b = 3;\r\n\r\n  let checked = false;\r\n\r\n  let scoops = 1;\r\n  let flavours = [\"mint\"];\r\n\r\n  let menu = [\"cookie\", \"mint\", \"ripple\"];\r\n\r\n  const join = (flavours) => {\r\n    if (flavours.length === 1) return flavours[0];\r\n    return `${flavours.slice(0, -1).join(\", \")} and ${\r\n      flavours[flavours.length - 1]\r\n    }`;\r\n  };\r\n\r\n  let value = \"Some words\";\r\n\r\n  let questions = [\r\n    { id: 1, text: `Where did you go to school?` },\r\n    { id: 2, text: `What is your mother's name?` },\r\n    {\r\n      id: 3,\r\n      text: `What is another personal fact that an attacker could easily find with Google?`,\r\n    },\r\n  ];\r\n\r\n  let selected;\r\n  let answer = \"\";\r\n\r\n  const handleSubmit = () => {\r\n    alert(\r\n      `answered question ${selected.id} (${selected.text}) with \"${answer}\"`\r\n    );\r\n  };\r\n\r\n  let html = \"<p>White some text!</p>\";\r\n\r\n  let todos = [\r\n    { done: false, text: \"finish Svelte tutorial\" },\r\n    { done: false, text: \"build an app\" },\r\n    { done: false, text: \"world domination\" },\r\n  ];\r\n\r\n  const add = () => {\r\n    todos = [...todos, { done: false, text: \"\" }];\r\n  };\r\n\r\n  const clear = () => {\r\n    todos = todos.filter((todo) => !todo.done);\r\n  };\r\n\r\n  $: remaining = todos.filter((todo) => !todo.done).length;\r\n\r\n  let time = 0;\r\n  let duration;\r\n  let paused = true;\r\n\r\n  let showControls = true;\r\n  let showControlsTimeout;\r\n\r\n  function handleMousemoveMedia(e) {\r\n    clearTimeout(showControlsTimeout);\r\n    showControlsTimeout = setTimeout(() => {\r\n      showControls = false;\r\n    }, 2000);\r\n\r\n    if (!(e.button & 1)) return;\r\n    if (!duration) return;\r\n\r\n    const { left, right } = this.getBoundingClientRect();\r\n    time = (duration * (e.clientX - left)) / (right - left);\r\n  }\r\n\r\n  function handleMousedownMedia(e) {\r\n    function handleMouseup() {\r\n      if (paused) e.target.play();\r\n      else e.target.pause();\r\n      cancel();\r\n    }\r\n\r\n    function cancel() {\r\n      e.target.removeEventListener(\"mouseup\", handleMouseup);\r\n    }\r\n\r\n    e.target.addEventListener(\"mouseup\", handleMouseup);\r\n\r\n    setTimeout(cancel, 200);\r\n  }\r\n\r\n  function format(seconds) {\r\n    if (isNaN(seconds)) return \"...\";\r\n\r\n    const minutes = Math.floor(seconds / 60);\r\n    seconds = Math.floor(seconds % 60);\r\n    if (seconds < 10) seconds = \"0\" + seconds;\r\n\r\n    return `${minutes}:${seconds}`;\r\n  }\r\n\r\n  let w;\r\n  let h;\r\n  let size = 42;\r\n  let text = \"edit me\";\r\n\r\n  let canvas;\r\n\r\n  onMount(() => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    let frame;\r\n\r\n    (function loop() {\r\n      frame = requestAnimationFrame(loop);\r\n\r\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n      for (let p = 0; p < imageData.data.length; p += 4) {\r\n        const i = p / 4;\r\n        const x = i % canvas.width;\r\n        const y = (i / canvas.height) >>> 0;\r\n\r\n        const t = window.performance.now();\r\n\r\n        const r = 64 + (128 * x) / canvas.width + 64 * Math.sin(t / 1000);\r\n        const g = 64 + (128 * y) / canvas.height + 64 * Math.cos(t / 1000);\r\n        const b = 128;\r\n\r\n        imageData.data[p + 0] = r;\r\n        imageData.data[p + 1] = g;\r\n        imageData.data[p + 2] = b;\r\n        imageData.data[p + 3] = 255;\r\n      }\r\n\r\n      ctx.putImageData(imageData, 0, 0);\r\n    })();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(frame);\r\n    };\r\n  });\r\n\r\n  let keyValue = \"\";\r\n\r\n  $: pin =\r\n    keyValue.length <= 1\r\n      ? keyValue\r\n      : `${\"*\".repeat(keyValue.length - 1)}${keyValue.slice(\r\n          keyValue.length - 1\r\n        )}`;\r\n\r\n  const handleSubmitKey = () => {\r\n    alert(\"submitted \" + keyValue);\r\n  };\r\n</script>\r\n\r\n<style>\r\n  [contenteditable] {\r\n    padding: 0.5em;\r\n    border: 1px solid #eee;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .done {\r\n    opacity: 0.4;\r\n  }\r\n\r\n  div {\r\n    position: relative;\r\n  }\r\n\r\n  .controls {\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    transition: opacity 1s;\r\n  }\r\n\r\n  .info {\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  span {\r\n    padding: 0.2em 0.5em;\r\n    color: white;\r\n    text-shadow: 0 0 8px black;\r\n    font-size: 1.4em;\r\n    opacity: 0.7;\r\n  }\r\n\r\n  .time {\r\n    width: 3em;\r\n  }\r\n\r\n  .time:last-child {\r\n    text-align: right;\r\n  }\r\n\r\n  progress {\r\n    display: block;\r\n    width: 100%;\r\n    height: 10px;\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n  }\r\n\r\n  progress::-webkit-progress-bar {\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  progress::-webkit-progress-value {\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n  }\r\n\r\n  video {\r\n    width: 100%;\r\n  }\r\n\r\n  canvas {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #666;\r\n    -webkit-mask: url(https://svelte.dev/svelte-logo-mask.svg) 50% 50% no-repeat;\r\n    mask: url(https://svelte.dev/svelte-logo-mask.svg) 50% 50% no-repeat;\r\n  }\r\n</style>\r\n\r\n<div class=\"binding\">\r\n  <div class=\"textinputs\">\r\n    <input type=\"text\" bind:value={name} />\r\n    <h2>Hello {name}</h2>\r\n  </div>\r\n  <div class=\"numbericinputs\">\r\n    <label>\r\n      <input type=\"number\" bind:value={a} min=\"0\" max=\"10\" />\r\n      <input type=\"range\" bind:value={a} min=\"0\" max=\"10\" />\r\n    </label>\r\n\r\n    <label>\r\n      <input type=\"number\" bind:value={b} min=\"0\" max=\"10\" />\r\n      <input type=\"range\" bind:value={b} min=\"0\" max=\"10\" />\r\n    </label>\r\n    <p>{a} + {b} = {a + b}</p>\r\n  </div>\r\n  <div class=\"checkboxinputs\">\r\n    <label><input type=\"checkbox\" bind:checked /> Yes!</label>\r\n    {#if checked}\r\n      <p>checked</p>\r\n    {:else}\r\n      <p>unchecked</p>\r\n    {/if}\r\n  </div>\r\n  <div class=\"groupinputs\">\r\n    <h2>Size</h2>\r\n    <div>\r\n      <label>\r\n        <input type=\"radio\" bind:group={scoops} value={1} />\r\n        One scoop\r\n      </label>\r\n      <label>\r\n        <input type=\"radio\" bind:group={scoops} value={2} />\r\n        Two scoops\r\n      </label>\r\n      <label>\r\n        <input type=\"radio\" bind:group={scoops} value={3} />\r\n        Three scoops\r\n      </label>\r\n    </div>\r\n\r\n    <h2>Flavours</h2>\r\n\r\n    {#each menu as flavour}\r\n      <label>\r\n        <input type=\"checkbox\" bind:group={flavours} value={flavour} />\r\n        {flavour}\r\n      </label>\r\n    {/each}\r\n\r\n    {#if flavours.length === 0}\r\n      <p>Please select at least one flavour</p>\r\n    {:else if flavours.length > scoops}\r\n      <p>Can't order more flavours than scoops!</p>\r\n    {:else}\r\n      <p>\r\n        You ordered\r\n        {scoops}\r\n        {scoops === 1 ? 'scoop' : 'scoops'}\r\n        of\r\n        {join(flavours)}\r\n      </p>\r\n    {/if}\r\n  </div>\r\n  <div class=\"textinputs\"><textarea bind:value /></div>\r\n  <div class=\"selectbindings\">\r\n    <h2>Insecurity questions</h2>\r\n    <select bind:value={selected}>\r\n      {#each questions as question}\r\n        <option value={question}>{question.text}</option>\r\n      {/each}\r\n    </select>\r\n    <input type=\"text\" bind:value={answer} />\r\n    <button on:click={handleSubmit} disabled={!answer}>submit</button>\r\n    <p>selected question {selected}</p>\r\n  </div>\r\n  <div class=\"selectmutiple\">\r\n    <select multiple bind:value={flavours}>\r\n      {#each menu as flavour}\r\n        <option value={flavour}>{flavour}</option>\r\n      {/each}\r\n    </select>\r\n  </div>\r\n  <div class=\"contenteditablebindings\">\r\n    <div contenteditable=\"true\" bind:innerHTML={html} />\r\n    <pre>{html}</pre>\r\n  </div>\r\n  <div class=\"eachblockbinding\">\r\n    <h2>Todos</h2>\r\n\r\n    {#each todos as todo}\r\n      <label class:done={todo.done}>\r\n        <input type=\"checkbox\" on:click={() => (todo.done = !todo.done)} />\r\n        <input type=\"text\" bind:value={todo.text} />\r\n      </label>\r\n    {/each}\r\n    {remaining}\r\n    remaining\r\n\r\n    <button on:click={add}>Add new</button>\r\n    <button on:click={clear}>Clear completed</button>\r\n  </div>\r\n  <div class=\"mediaelements\">\r\n    <h1>Caminandes: Llamigos</h1>\r\n    <!-- svelte-ignore a11y-media-has-caption -->\r\n    <video\r\n      poster=\"https://sveltejs.github.io/assets/caminandes-llamigos.jpg\"\r\n      src=\"https://sveltejs.github.io/assets/caminandes-llamigos.mp4\"\r\n      on:mousemove={handleMousemoveMedia}\r\n      on:mousedown={handleMousedownMedia}\r\n      bind:currentTime={time}\r\n      bind:duration\r\n      bind:paused />\r\n\r\n    <div class=\"controls\" style=\"opacity: {duration && showControls ? 1 : 0}\">\r\n      <progress value={time / duration || 0} />\r\n\r\n      <div class=\"info\">\r\n        <span class=\"time\">{format(time)}</span>\r\n        <span>click anywhere to\r\n          {paused ? 'play' : 'pause'}\r\n          / drag to seek</span>\r\n        <span class=\"time\">{format(duration)}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"dimensions\" bind:clientHeight={h} bind:clientWidth={w}>\r\n    <input type=\"range\" bind:value={size} />\r\n    <input type=\"text \" bind:value={text} />\r\n    <p style=\"font-size: {size}px\">size: {w}px x {h}px</p>\r\n  </div>\r\n  <div class=\"this\"><canvas bind:this={canvas} width={32} height={32} /></div>\r\n  <div class=\"componentbindings\">\r\n    <p>pin: {pin}</p>\r\n    <Keypad on:submit={handleSubmitKey} bind:value={keyValue} />\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  let current = \"foo\";\r\n\r\n  let big = false;\r\n</script>\r\n\r\n<style>\r\n  button {\r\n    display: block;\r\n  }\r\n\r\n  .selected {\r\n    background-color: #ff3e00;\r\n    color: white;\r\n  }\r\n\r\n  .big {\r\n    font-size: 42px;\r\n  }\r\n</style>\r\n\r\n<div class=\"classes\">\r\n  <div class=\"classDirective\">\r\n    <button\r\n      class:selected={current === 'foo'}\r\n      on:click={() => (current = 'foo')}>foo</button>\r\n    <button\r\n      class:selected={current === 'bar'}\r\n      on:click={() => (current = 'bar')}>bar</button>\r\n    <button\r\n      class:selected={current === 'baz'}\r\n      on:click={() => (current = 'baz')}>baz</button>\r\n  </div>\r\n\r\n  <div class=\"shorhandClassDirective\">\r\n    <label> <input type=\"checkbox\" bind:checked={big} /> big </label>\r\n\r\n    <p class:big>some {big ? 'big' : 'small'} text</p>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import Box from \"../lessons/Box.svelte\";\r\n  import ContactCard from \"../lessons/ContactCard.svelte\";\r\n  import Hoverable from \"../lessons/Hoverable.svelte\";\r\n</script>\r\n\r\n<style>\r\n  .slotProps div {\r\n    padding: 1em;\r\n    margin: 0 0 1em 0;\r\n    background-color: #eee;\r\n    color: #ff3e00;\r\n  }\r\n\r\n  .slotProps .active {\r\n    background-color: #ff3e00;\r\n    color: white;\r\n  }\r\n</style>\r\n\r\n<div class=\"componentComposition\">\r\n  <div class=\"slots\">\r\n    <Box>\r\n      <h2>Hello!</h2>\r\n      <p>This is a box. It can contain anything.</p>\r\n    </Box>\r\n  </div>\r\n\r\n  <div class=\"slotFallbacks\">\r\n    <Box />\r\n  </div>\r\n\r\n  <div class=\"namedSlots\">\r\n    <ContactCard>\r\n      <span slot=\"name\"> P. Sherman </span>\r\n\r\n      <span slot=\"address\"> 42 Wallaby Way<br /> Sydney </span>\r\n    </ContactCard>\r\n  </div>\r\n\r\n  <div class=\"slotProps\">\r\n    <Hoverable let:hovering={active}>\r\n      <div class:active>\r\n        {#if active}\r\n          <p>I am being hovered upon.</p>\r\n        {:else}\r\n          <p>Hover over me!</p>\r\n        {/if}\r\n      </div>\r\n    </Hoverable>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import CustomButton from \"../lessons/CustomButton.svelte\";\r\n  import Inner from \"../lessons/Inner.svelte\";\r\n  import Outer from \"../lessons/Outer.svelte\";\r\n\r\n  let m = { x: 0, y: 0 };\r\n\r\n  const handleMousemousePosition = (e) => {\r\n    m.x = e.clientX;\r\n    m.y = e.clientY;\r\n  };\r\n\r\n  const handleClickOnce = () => {\r\n    alert(\"no more alert\");\r\n  };\r\n\r\n  const handleMessage = (e) => {\r\n    alert(e.detail.text);\r\n  };\r\n\r\n  const handleCustomButton = () => {\r\n    alert(\"clicked\");\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .domevent {\r\n    width: 200px;\r\n    height: 200px;\r\n    border: 1px solid black;\r\n  }\r\n</style>\r\n\r\n<div class=\"event\">\r\n  <div class=\"domevent\" on:mousemove={handleMousemousePosition}>\r\n    The mouse position is\r\n    {m.x}\r\n    x\r\n    {m.y}\r\n  </div>\r\n  <div\r\n    class=\"domevent\"\r\n    on:mousemove={(e) => (m = { x: e.clientX, y: e.clientY })}>\r\n    The mouse position is\r\n    {m.x}\r\n    x\r\n    {m.y}\r\n  </div>\r\n  <div class=\"onceevent\">\r\n    <button on:click|once={handleClickOnce}>Click me!</button>\r\n  </div>\r\n  <div class=\"componentevent\">\r\n    <Inner on:message={handleMessage} />\r\n  </div>\r\n  <div class=\"eventforward\">\r\n    <Outer on:message={handleMessage} />\r\n  </div>\r\n  <div class=\"domeeventforwarding\">\r\n    <CustomButton on:click={handleCustomButton} />\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import Nested from \"../lessons/Nested.svelte\";\r\n\r\n  let name = \"LeeSeongJinCa!\";\r\n  let src = \"https://svelte.dev/tutorial/image.gif\";\r\n  let string = \"this string contains some <string>HTML!</strong>\";\r\n</script>\r\n\r\n<style>\r\n  .paragraph {\r\n    color: purple;\r\n    font-family: \"Comic Sans MS\", cursive;\r\n    font-size: 2em;\r\n  }\r\n</style>\r\n\r\n<div class=\"introduce\">\r\n  <h1>Hello world!</h1>\r\n  <h1>Hello {name}!</h1>\r\n  <img {src} alt=\"test\" />\r\n  <p class=\"paragraph\">This is paragraph.</p>\r\n  <Nested />\r\n  <p>\r\n    {@html string}\r\n  </p>\r\n</div>\r\n",
    "<script>\r\n  import { afterUpdate, beforeUpdate, onMount, tick } from \"svelte\";\r\n\r\n  import { onInterval } from \"../lessons/utils\";\r\n\r\n  let photos = [];\r\n\r\n  onMount(async () => {\r\n    const res = await fetch(\r\n      `https://jsonplaceholder.typicode.com/photos?_limit=5`\r\n    );\r\n    photos = await res.json();\r\n  });\r\n\r\n  let seconds = 0;\r\n  // onInterval(() => (seconds += 1), 1000);\r\n\r\n  let div;\r\n  let autoscroll;\r\n\r\n  beforeUpdate(() => {\r\n    autoscroll =\r\n      div && div.offsetHeight + div.scrollTop > div.scrollHeight - 20;\r\n  });\r\n\r\n  afterUpdate(() => {\r\n    if (autoscroll) div.scrollTo(0, div.scrollHeight);\r\n  });\r\n\r\n  let comments = [{ author: \"eliza\", text: \"hello\" }];\r\n\r\n  const handleKeydownComments = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      const text = e.target.value;\r\n      if (!text) return;\r\n\r\n      comments = [...comments, { author: \"user\", text }];\r\n\r\n      e.target.value = \"\";\r\n\r\n      setTimeout(() => {\r\n        comments = [\r\n          ...comments,\r\n          {\r\n            author: \"eliza\",\r\n            text: \"...\",\r\n            placeholder: true,\r\n          },\r\n        ];\r\n\r\n        setTimeout(() => {\r\n          comments = comments\r\n            .filter((comment) => !comment.placeholder)\r\n            .concat({\r\n              author: \"eliza\",\r\n              text: \"hello, too\",\r\n            });\r\n        }, 500);\r\n      }, 200);\r\n    }\r\n  };\r\n\r\n  let text = `Select some text and hit the tab key to toggle uppercase`;\r\n\r\n  async function handleKeyDownTick(e) {\r\n    if (e.key !== \"Tab\") return;\r\n\r\n    e.preventDefault();\r\n\r\n    const { selectionStart, selectionEnd, value } = this;\r\n    const selection = value.slice(selectionStart, selectionEnd);\r\n\r\n    const replacement = /[a-z]/.test(selection)\r\n      ? selection.toUpperCase()\r\n      : selection.toLowerCase();\r\n\r\n    text =\r\n      value.slice(0, selectionStart) + replacement + value.slice(selectionEnd);\r\n\r\n    await tick();\r\n\r\n    this.selectionStart = selectionStart;\r\n    this.selectionEnd = selectionEnd;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .photos {\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    grid-gap: 8px;\r\n  }\r\n\r\n  figure,\r\n  img {\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n\r\n  .chat {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    max-width: 320px;\r\n  }\r\n\r\n  .scrollable {\r\n    flex: 1 1 auto;\r\n    border-top: 1px solid #eee;\r\n    margin: 0 0 0.5em 0;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  article {\r\n    margin: 0.5em 0;\r\n  }\r\n\r\n  .user {\r\n    text-align: right;\r\n  }\r\n\r\n  span {\r\n    padding: 0.5em 1em;\r\n    display: inline-block;\r\n  }\r\n\r\n  .eliza span {\r\n    background-color: #eee;\r\n    border-radius: 1em 1em 1em 0;\r\n    color: black;\r\n  }\r\n\r\n  .user span {\r\n    background-color: #0074d9;\r\n    color: black;\r\n    border-radius: 1em 1em 0 1em;\r\n    word-break: break-all;\r\n  }\r\n\r\n  textarea {\r\n    width: 100%;\r\n    height: 200px;\r\n  }\r\n</style>\r\n\r\n<div class=\"lifecycle\">\r\n  <div class=\"photos\">\r\n    {#each photos as photo}\r\n      <figure>\r\n        <img src={photo.thumbnailUrl} alt={photo.title} />\r\n        <figcaption>{photo.title}</figcaption>\r\n      </figure>\r\n    {:else}\r\n      <p>...loading</p>\r\n    {/each}\r\n  </div>\r\n  <div class=\"onDestroy\">\r\n    The page has been open for\r\n    {seconds}\r\n    {seconds === 1 ? 'second' : 'seconds'}\r\n  </div>\r\n  <div class=\"beforeUpdateAfterUpdate\">\r\n    <div class=\"chat\">\r\n      <h1>Eliza</h1>\r\n\r\n      <div class=\"scollable\" bind:this={div}>\r\n        {#each comments as comment}\r\n          <article class={comment.author}><span>{comment.text}</span></article>\r\n        {/each}\r\n      </div>\r\n    </div>\r\n\r\n    <input type=\"text\" on:keydown={handleKeydownComments} />\r\n  </div>\r\n  <div class=\"tick\">\r\n    <textarea bind:value={text} on:keydown={handleKeyDownTick} />\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { tweened, spring } from \"svelte/motion\";\r\n\r\n  const progress = tweened(0);\r\n\r\n  const coords = spring(\r\n    { x: 50, y: 50 },\r\n    {\r\n      stiffness: 0.1,\r\n      damping: 0.25,\r\n    }\r\n  );\r\n  let size = spring(10);\r\n</script>\r\n\r\n<style>\r\n  progress {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n\r\n  .spring {\r\n    position: relative;\r\n  }\r\n\r\n  svg {\r\n    width: 100%;\r\n    height: 100px;\r\n    border: 2px solid white;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  circle {\r\n    fill: #ff3e00;\r\n  }\r\n</style>\r\n\r\n<div class=\"motion\">\r\n  <div class=\"tweend\">\r\n    <progress value={$progress} />\r\n    <button on:click={() => ($progress = 0)}>0%</button>\r\n    <button on:click={() => ($progress = 0.25)}>25%</button>\r\n    <button on:click={() => ($progress = 0.5)}>50%</button>\r\n    <button on:click={() => ($progress = 0.75)}>75%</button>\r\n    <button on:click={() => ($progress = 1)}>100%</button>\r\n  </div>\r\n  <div class=\"spring\">\r\n    <div style=\"position: absolute; right: 1em;\">\r\n      <label>\r\n        <h3>stiffness ({coords.stiffness})</h3>\r\n        <input\r\n          type=\"range\"\r\n          bind:value={coords.stiffness}\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.1\" />\r\n      </label>\r\n\r\n      <label>\r\n        <h3>damping ({coords.damping})</h3>\r\n        <input\r\n          type=\"range\"\r\n          bind:value={coords.damping}\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.1\" />\r\n      </label>\r\n    </div>\r\n    <svg\r\n      on:mousemove={(e) => coords.set({ x: e.offsetX, y: e.offsetY })}\r\n      on:mousedown={() => ($size = 30)}\r\n      on:mouseup={() => ($size = 10)}>\r\n      <circle cx={$coords.x} cy={$coords.y} r={$size} /></svg>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import Folder from \"../lessons/Folder.svelte\";\r\n  import RedThing from \"../lessons/RedThing.svelte\";\r\n  import BlueThing from \"../lessons/BlueThing.svelte\";\r\n  import GreenThing from \"../lessons/GreenThing.svelte\";\r\n  import Todo from \"../lessons/Todo.svelte\";\r\n\r\n  let root = [\r\n    {\r\n      type: \"folder\",\r\n      name: \"Important work stuff\",\r\n      files: [{ type: \"file\", name: \"quarterly-results.xlsx\" }],\r\n    },\r\n    {\r\n      type: \"folder\",\r\n      name: \"Animal GIFs\",\r\n      files: [\r\n        {\r\n          type: \"folder\",\r\n          name: \"Dogs\",\r\n          files: [\r\n            { type: \"file\", name: \"treadmill.gif\" },\r\n            { type: \"file\", name: \"rope-jumping.gif\" },\r\n          ],\r\n        },\r\n        {\r\n          type: \"folder\",\r\n          name: \"Goats\",\r\n          files: [\r\n            { type: \"file\", name: \"parkour.gif\" },\r\n            { type: \"file\", name: \"rampage.gif\" },\r\n          ],\r\n        },\r\n        { type: \"file\", name: \"cat-roomba.gif\" },\r\n        { type: \"file\", name: \"duck-shuffle.gif\" },\r\n        { type: \"file\", name: \"monkey-on-a-pig.gif\" },\r\n      ],\r\n    },\r\n    { type: \"file\", name: \"TODO.md\" },\r\n  ];\r\n\r\n  const options = [\r\n    { color: \"red\", component: RedThing },\r\n    { color: \"blue\", component: BlueThing },\r\n    { color: \"green\", component: GreenThing },\r\n  ];\r\n\r\n  let selected = options[0];\r\n\r\n  let key;\r\n  let keyCode;\r\n\r\n  const handleKeydown = (e) => {\r\n    key = e.key;\r\n    keyCode = e.keyCode;\r\n  };\r\n\r\n  let scrollY;\r\n\r\n  let kittyHere = false;\r\n\r\n  const handleMouseenter = () => {\r\n    kittyHere = true;\r\n  };\r\n\r\n  const handleMouseleave = () => {\r\n    kittyHere = false;\r\n  };\r\n\r\n  let todos = [\r\n    { id: 1, done: true, text: \"wash the car\" },\r\n    { id: 2, done: false, text: \"take the dog for a walk\" },\r\n    { id: 3, done: false, text: \"mow the lawn\" },\r\n  ];\r\n\r\n  const toggle = (toggled) => {\r\n    todos = todos.map((todo) => {\r\n      if (todo === toggled) {\r\n        return {\r\n          id: todo.id,\r\n          text: todo.text,\r\n          done: !todo.done,\r\n        };\r\n      }\r\n\r\n      return todo;\r\n    });\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .svelteWindow {\r\n    display: flex;\r\n    height: 200px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .svelteWindow kbd {\r\n    background-color: #eee;\r\n    border-radius: 4px;\r\n    font-size: 6em;\r\n    padding: 0.2em 0.5em;\r\n    border-top: 5px solid rgba(255, 255, 255, 0.5);\r\n    border-left: 5px solid rgba(255, 255, 255, 0.5);\r\n    border-right: 5px solid rgba(0, 0, 0, 0.2);\r\n    border-bottom: 5px solid rgba(0, 0, 0, 0.2);\r\n    color: #555;\r\n  }\r\n\r\n  .curious {\r\n    transition: 0.3s;\r\n    transform: translate(-80%, 0) rotate(30deg);\r\n  }\r\n</style>\r\n\r\n<div class=\"specialElements\">\r\n  <!-- <svelte:self /> -->\r\n  <Folder name=\"Home\" files={root} expanded />\r\n\r\n  <!-- <svelte:component /> -->\r\n  <div class=\"svelteComponent\">\r\n    <select bind:value={selected}>\r\n      {#each options as option}\r\n        <option value={option}>{option.color}</option>\r\n      {/each}\r\n    </select>\r\n\r\n    <svelte:component this={selected.component} />\r\n  </div>\r\n\r\n  <div class=\"svelteWindow\">\r\n    {#if key}\r\n      <kbd>{key === ' ' ? 'Space' : key}</kbd>\r\n      <p>{keyCode}</p>\r\n    {:else}\r\n      <p>Focus this window and press any key</p>\r\n    {/if}\r\n  </div>\r\n\r\n  <div class=\"svelteWindowBindings\">Scrolling Y - {scrollY}</div>\r\n\r\n  <div class=\"svelteBody\">\r\n    <div class=\"kittyBox\">\r\n      <img\r\n        src=\"https://svelte.dev/tutorial/kitten.png\"\r\n        alt=\"kitty\"\r\n        class=\"kitty\"\r\n        class:curious={kittyHere} />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"svelteOptions\">\r\n    <h2>Todos</h2>\r\n    {#each todos as todo}\r\n      <Todo on:click={() => toggle(todo)} {todo} />\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<!-- <svelte:window /> -->\r\n<svelte:window on:keydown={handleKeydown} bind:scrollY />\r\n\r\n<!-- <svelte:body /> -->\r\n<svelte:body\r\n  on:mouseenter={handleMouseenter}\r\n  on:mouseleave={handleMouseleave} />\r\n\r\n<!-- <svelte:head /> -->\r\n<svelte:head>\r\n  <link rel=\"stylesheet\" href=\"https://svelte.dev/tutorial/dark-theme.css\" />\r\n</svelte:head>\r\n",
    "<script>\r\n  import { fade, fly, slide, crossfade } from \"svelte/transition\";\r\n  import { cubicInOut, elasticOut, quintOut } from \"svelte/easing\";\r\n\r\n  let visible = true;\r\n\r\n  const spin = (node, { duration }) => {\r\n    return {\r\n      duration,\r\n      css: (t) => {\r\n        const eased = elasticOut(t);\r\n\r\n        return `\r\n          transform: scale(${eased}) rotate(${eased * 1080}deg);\r\n          color: red;\r\n        `;\r\n      },\r\n    };\r\n  };\r\n\r\n  const typewriter = (node, { speed = 50 }) => {\r\n    const vaild =\r\n      node.childNodes.length === 1 &&\r\n      node.childNodes[0].nodeType === Node.TEXT_NODE;\r\n\r\n    if (!vaild) {\r\n      throw new Error(\r\n        \"This transition only works on elements with a single text node child\"\r\n      );\r\n    }\r\n\r\n    const text = node.textContent;\r\n    const duration = text.length * speed;\r\n\r\n    return {\r\n      duration,\r\n      tick: (t) => {\r\n        const i = ~~(text.length * t);\r\n        node.textContent = text.slice(0, i);\r\n      },\r\n    };\r\n  };\r\n\r\n  let status = \"\";\r\n\r\n  let showItems = true;\r\n  let i = 5;\r\n  let items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n  const [send, receive] = crossfade({\r\n    duration: (d) => Math.sqrt(d * 200),\r\n    fallback(node, params) {\r\n      const style = getComputedStyle(node);\r\n      const transform = style.transform === \"none\" ? \"\" : style.transform;\r\n\r\n      return {\r\n        duration: 600,\r\n        easing: quintOut,\r\n        css: (t) => `\r\n          transform: ${transform} scale(${t});\r\n          opacity: ${t};\r\n        `,\r\n      };\r\n    },\r\n  });\r\n\r\n  let uid = 1;\r\n\r\n  let todos = [\r\n    { id: uid++, done: false, description: \"write some docs\" },\r\n    { id: uid++, done: false, description: \"start writing blog post\" },\r\n    { id: uid++, done: true, description: \"buy some milk\" },\r\n    { id: uid++, done: false, description: \"mow the lawn\" },\r\n    { id: uid++, done: false, description: \"feed the turtle\" },\r\n    { id: uid++, done: false, description: \"fix some bugs\" },\r\n  ];\r\n\r\n  const add = (input) => {\r\n    const todo = {\r\n      id: uid++,\r\n      done: false,\r\n      description: input.value,\r\n    };\r\n\r\n    todos = [...todos, todo];\r\n    input.value = \"\";\r\n  };\r\n\r\n  const remove = (todo) => {\r\n    todos = todos.filter((t) => t !== todo);\r\n  };\r\n\r\n  const mark = (todo, done) => {\r\n    todo.done = done;\r\n    remove(todo);\r\n    todos = todos.concat(todo);\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .transitions {\r\n    position: relative;\r\n  }\r\n\r\n  .centered {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  span {\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 4em;\r\n  }\r\n\r\n  .item {\r\n    padding: 0.5em 0;\r\n    border-top: 1px solid #eee;\r\n  }\r\n\r\n  .board {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 1em;\r\n    max-width: 36em;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .board > input {\r\n    font-size: 1.4em;\r\n    grid-column: 1/3;\r\n  }\r\n\r\n  .board h2 {\r\n    font-size: 2em;\r\n    font-weight: 200;\r\n    user-select: none;\r\n    margin: 0 0 0.5em 0;\r\n  }\r\n\r\n  .board label {\r\n    position: relative;\r\n    line-height: 1.2;\r\n    padding: 0.5em 2.5em 0.5em 2em;\r\n    margin: 0 0 0.5em 0;\r\n    border-radius: 2px;\r\n    user-select: none;\r\n    border: 1px solid hsl(240, 8%, 70%);\r\n    background-color: hsl(240, 8%, 93%);\r\n    color: #333;\r\n  }\r\n\r\n  .board input[type=\"checkbox\"] {\r\n    position: absolute;\r\n    left: 0.5em;\r\n    top: 0.6em;\r\n    margin: 0;\r\n  }\r\n\r\n  .board .done {\r\n    border: 1px solid hsl(240, 8%, 90%);\r\n    background-color: hsl(240, 8%, 98%);\r\n  }\r\n\r\n  .board button {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0.2em;\r\n    width: 2em;\r\n    height: 100%;\r\n    background: no-repeat 50% 50%\r\n      url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23676778' d='M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M17,7H14.5L13.5,6H10.5L9.5,7H7V9H17V7M9,18H15A1,1 0 0,0 16,17V10H8V17A1,1 0 0,0 9,18Z'%3E%3C/path%3E%3C/svg%3E\");\r\n    background-size: 1.4em 1.4em;\r\n    border: none;\r\n    opacity: 0;\r\n    transition: opacity 0.2s;\r\n    text-indent: -9999px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .board label:hover button {\r\n    opacity: 1;\r\n  }\r\n</style>\r\n\r\n<div class=\"transitions\">\r\n  <label> <input type=\"checkbox\" bind:checked={visible} /> visible </label>\r\n  {#if visible}\r\n    <p transition:fade>Fades in and out</p>\r\n    <p transition:fly={{ duration: 2000, easing: cubicInOut, y: 200 }}>\r\n      Fades in and out\r\n    </p>\r\n    <p in:fade out:fly={{ duration: 2000, easing: cubicInOut, y: 200 }}>\r\n      Fades in and out\r\n    </p>\r\n    <div class=\"centered\" in:spin={{ duration: 8000 }} out:fade>\r\n      <span>transition!</span>\r\n    </div>\r\n    <p transition:typewriter>The quick brown fox jumps over the lazy dog.</p>\r\n    <p\r\n      transition:fly={{ y: 200, duration: 2000 }}\r\n      on:introstart={() => (status = 'intro started')}\r\n      on:outrostart={() => (status = 'outro started')}\r\n      on:introend={() => (status = 'intro ended')}\r\n      on:outroend={() => (status = 'outro ended')}>\r\n      Flies in and out\r\n    </p>\r\n  {/if}\r\n  <div class=\"localTransitions\">\r\n    <label>\r\n      <input type=\"checkbox\" bind:checked={showItems} />\r\n      show list\r\n    </label>\r\n    <input type=\"range\" min=\"0\" max=\"10\" bind:value={i} />\r\n\r\n    {#if showItems}\r\n      {#each items.slice(0, i) as item}\r\n        <div class=\"item\" transition:slide|local>{item}</div>\r\n      {/each}\r\n    {/if}\r\n  </div>\r\n  <div class=\"defferedTransitions\">\r\n    <div class=\"board\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"what needs to be done?\"\r\n        on:keydown={(e) => e.key === 'Enter' && add(e.target)} />\r\n\r\n      <div class=\"left\">\r\n        <h2>todo</h2>\r\n        {#each todos.filter((t) => !t.done) as todo (todo.id)}\r\n          <label in:receive={{ key: todo.id }} out:send={{ key: todo.id }}>\r\n            <input type=\"checkbox\" on:change={() => mark(todo, true)} />\r\n            {todo.description}\r\n            <button on:click={() => remove(todo)}>remove</button>\r\n          </label>\r\n        {/each}\r\n      </div>\r\n      <div class=\"right\">\r\n        <h2>done</h2>\r\n        {#each todos.filter((t) => t.done) as todo (todo.id)}\r\n          <label\r\n            class=\"done\"\r\n            in:receive={{ key: todo.id }}\r\n            out:send={{ key: todo.id }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked\r\n              on:change={() => mark(todo, false)} />\r\n            {todo.description}\r\n            <button on:click={() => remove(todo)}>remove</button>\r\n          </label>\r\n        {/each}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AA0BU,IAAI,AAAE,CAAC,AACb,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,KAAK,CAAC,CAAC,AAClB,CAAC,AAED,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,AAChC,CAAC,AAEO,CAAC,AAAC,CACF,CAAC,AAAC,QAAQ,AAAC,CAAC,AAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,IAAI,CAAE,CAAC,CACP,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,MAAM,AACpB,CAAC;ACVD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACjB,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,gBAAE,CACF,CAAC,cAAC,CAAC,AACD,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,AACrB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,AACvB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,KAAK,CAAE,OAAO,AAChB,CAAC;ACpDD,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACb,CAAC;ACFD,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CACrB,OAAO,CAAE,IAAI,AACf,CAAC;ACJD,aAAa,eAAC,CAAC,AACb,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC1C,OAAO,CAAE,GAAG,AACd,CAAC,AAED,EAAE,eAAC,CAAC,AACF,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CACpB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACjB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAClC,CAAC,AAED,uBAAQ,CACR,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CACpB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CACzB,eAAe,CAAE,IAAI,CAAC,IAAI,CAC1B,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CACnB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,gBAAgB,CAAE,IAAI,6BAA6B,CAAC,AACtD,CAAC,AACD,MAAM,eAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,wBAAwB,CAAC,AACjD,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,IAAI,AACb,CAAC;AC1BD,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CACpB,UAAU,CAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAC7B,eAAe,CAAE,GAAG,CAAC,GAAG,AAC1B,CAAC;ACGD,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CACpB,UAAU,CAAE,IAAI,8CAA8C,CAAC,CAAC,CAAC,CAAC,KAAK;MACrE,SAAS,CACX,eAAe,CAAE,GAAG,CAAC,GAAG,CACxB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,SAAS,eAAC,CAAC,AACT,gBAAgB,CAAE,IAAI,mDAAmD,CAAC,AAC5E,CAAC,AAED,EAAE,eAAC,CAAC,AACF,OAAO,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CACxB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CACnB,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC7B,CAAC,AAED,EAAE,eAAC,CAAC,AACF,OAAO,CAAE,KAAK,CAAC,CAAC,AAClB,CAAC;AClCD,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,KAAK,AACd,CAAC;ACgBD,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,kBAAkB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,QAAQ,CAAE,KAAK,AACjB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,CAAC,AACX,CAAC;ACUD,GAAG,cAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,AACf,CAAC;ACxCD,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,MAAM,CACb,WAAW,CAAE,eAAe,CAAC,CAAC,OAAO,CACrC,SAAS,CAAE,GAAG,AAChB,CAAC;ACJD,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,GAAG,AACZ,CAAC;ACID,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,KAAK,CAAC,KAAK,CACpB,MAAM,CAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CACvB,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,MAAM,CAClB,aAAa,CAAE,KAAK,CACpB,KAAK,CAAE,KAAK,AACd,CAAC;ACDD,GAAG,cAAC,CAAC,AACH,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,GAAG,AAClB,CAAC;ACqBD,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,KAAK,AACnB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,KAAK,CACf,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,OAAO,CAAC,CACnB,MAAM,CAAE,IAAI,QAAQ,CAAC,CACrB,IAAI,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAClC,GAAG,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAClC,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,AACd,CAAC;ACED,MAAM,4BAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAC9B,QAAQ,CAAE,GAAG,CACb,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,oBAAM,CAAG,KAAK,cAAC,CAAC,AACd,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,CAAC,CAAC,CAAC,AAClB,CAAC,AAED,oBAAM,CAAC,EAAE,cAAC,CAAC,AACT,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,AACrB,CAAC,AAED,oBAAM,CAAC,KAAK,cAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,CAClB,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAC9B,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CACnB,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACnC,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACnC,KAAK,CAAE,IAAI,AACb,CAAC,AAED,oBAAM,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,cAAC,CAAC,AAC7B,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,KAAK,CACX,GAAG,CAAE,KAAK,CACV,MAAM,CAAE,CAAC,AACX,CAAC,AAED,oBAAM,CAAC,KAAK,cAAC,CAAC,AACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACnC,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,AACrC,CAAC,AAED,oBAAM,CAAC,MAAM,cAAC,CAAC,AACb,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,KAAK,CACZ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,SAAS,CAAC,GAAG,CAAC,GAAG;MAC3B,IAAI,0TAA0T,CAAC,CACjU,eAAe,CAAE,KAAK,CAAC,KAAK,CAC5B,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IAAI,CACxB,WAAW,CAAE,OAAO,CACpB,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,oBAAM,CAAC,KAAK,MAAM,CAAC,MAAM,cAAC,CAAC,AACzB,OAAO,CAAE,CAAC,AACZ,CAAC;AC6CD,CAAC,eAAe,CAAC,cAAC,CAAC,AACjB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,GAAG,AACd,CAAC,AAED,GAAG,cAAC,CAAC,AACH,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,OAAO,CAAC,EAAE,AACxB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,aAAa,AAChC,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,KAAK,CAAC,KAAK,CACpB,KAAK,CAAE,KAAK,CACZ,WAAW,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAC1B,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,GAAG,AACd,CAAC,AAED,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,GAAG,AACZ,CAAC,AAED,mBAAK,WAAW,AAAC,CAAC,AAChB,UAAU,CAAE,KAAK,AACnB,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,kBAAkB,CAAE,IAAI,CACxB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,sBAAQ,sBAAsB,AAAC,CAAC,AAC9B,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC,AAED,sBAAQ,wBAAwB,AAAC,CAAC,AAChC,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC5C,CAAC,AAED,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,AACb,CAAC,AAED,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,CACtB,YAAY,CAAE,IAAI,uCAAuC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAC5E,IAAI,CAAE,IAAI,uCAAuC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,AACtE,CAAC;ACjOD,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,KAAK,AAChB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,AACd,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC;ACXD,wBAAU,CAAC,GAAG,cAAC,CAAC,AACd,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACjB,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,wBAAU,CAAC,OAAO,cAAC,CAAC,AAClB,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,AACd,CAAC;ACSD,SAAS,eAAC,CAAC,AACT,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,AACzB,CAAC;ACrBD,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,MAAM,CACb,WAAW,CAAE,eAAe,CAAC,CAAC,OAAO,CACrC,SAAS,CAAE,GAAG,AAChB,CAAC;AC0ED,OAAO,4BAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,QAAQ,CAAE,GAAG,AACf,CAAC,AAED,kCAAM,CACN,GAAG,4BAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,AACX,CAAC,AAED,KAAK,4BAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,KAAK,AAClB,CAAC,AAED,WAAW,4BAAC,CAAC,AACX,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC1B,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CACnB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,OAAO,4BAAC,CAAC,AACP,MAAM,CAAE,KAAK,CAAC,CAAC,AACjB,CAAC,AAED,KAAK,4BAAC,CAAC,AACL,UAAU,CAAE,KAAK,AACnB,CAAC,AAED,IAAI,4BAAC,CAAC,AACJ,OAAO,CAAE,KAAK,CAAC,GAAG,CAClB,OAAO,CAAE,YAAY,AACvB,CAAC,AAED,oBAAM,CAAC,IAAI,cAAC,CAAC,AACX,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAC5B,KAAK,CAAE,KAAK,AACd,CAAC,AAED,mBAAK,CAAC,IAAI,cAAC,CAAC,AACV,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAC5B,UAAU,CAAE,SAAS,AACvB,CAAC,AAED,QAAQ,4BAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,AACf,CAAC;AC/HD,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,AACb,CAAC,AAED,OAAO,cAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,GAAG,cAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,UAAU,CAAE,UAAU,AACxB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,IAAI,CAAE,OAAO,AACf,CAAC;ACyDD,aAAa,8BAAC,CAAC,AACb,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,KAAK,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,4BAAa,CAAC,GAAG,eAAC,CAAC,AACjB,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,KAAK,CAAC,KAAK,CACpB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC9C,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC/C,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC1C,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC3C,KAAK,CAAE,IAAI,AACb,CAAC,AAED,QAAQ,8BAAC,CAAC,AACR,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,AAC7C,CAAC;ACdD,YAAY,8BAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,SAAS,8BAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,GAAG,CACT,GAAG,CAAE,GAAG,CACR,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,AAClC,CAAC,AAED,IAAI,8BAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,SAAS,CAAE,GAAG,AAChB,CAAC,AAED,KAAK,8BAAC,CAAC,AACL,OAAO,CAAE,KAAK,CAAC,CAAC,CAChB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC5B,CAAC,AAED,MAAM,8BAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAC9B,QAAQ,CAAE,GAAG,CACb,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,qBAAM,CAAG,KAAK,eAAC,CAAC,AACd,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,CAAC,CAAC,CAAC,AAClB,CAAC,AAED,qBAAM,CAAC,EAAE,eAAC,CAAC,AACT,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,AACrB,CAAC,AAED,qBAAM,CAAC,KAAK,eAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,CAClB,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAC9B,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CACnB,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACnC,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACnC,KAAK,CAAE,IAAI,AACb,CAAC,AAED,qBAAM,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAC,CAAC,AAC7B,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,KAAK,CACX,GAAG,CAAE,KAAK,CACV,MAAM,CAAE,CAAC,AACX,CAAC,AAED,qBAAM,CAAC,KAAK,eAAC,CAAC,AACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACnC,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,AACrC,CAAC,AAED,qBAAM,CAAC,MAAM,eAAC,CAAC,AACb,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,KAAK,CACZ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,SAAS,CAAC,GAAG,CAAC,GAAG;MAC3B,IAAI,0TAA0T,CAAC,CACjU,eAAe,CAAE,KAAK,CAAC,KAAK,CAC5B,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IAAI,CACxB,WAAW,CAAE,OAAO,CACpB,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,qBAAM,CAAC,KAAK,MAAM,CAAC,MAAM,eAAC,CAAC,AACzB,OAAO,CAAE,CAAC,AACZ,CAAC"
}